
R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # R_code_from_paper.R
> # Using RngStreams for Parallel Random Number Generation in C++ and R
> # Computational Statistics Andrew Karl, Randy Eubank, Jelena Milovanovic, Mark
> # Reiser, Dennis Young akarl@asu.edu
> x <- NULL
> for (i in 1:200) {
+   set.seed(123)
+   .Random.seed[3:626] <- as.integer(.Random.seed[3:626] + 
+                                     (i - 1) * 100)
+   zTemp <- rnorm(1000)
+   x <- c(x, sqrt(1000) * mean(zTemp))
+ }
> set.seed(123)
> y <- NULL
> for (i in 1:200) {
+   zTemp <- rnorm(1000)
+   y <- c(y, sqrt(1000) * mean(zTemp))
+ }
> cat(shapiro.test(x)$p.value, shapiro.test(y)$p.value, "\n")
0.0001438936 0.4466189 
> #################################### 
> RNGkind("L'Ecuyer-CMRG")
> set.seed(123)
> cat(.Random.seed[2:7], "\n")
1806547166 -983674937 643431772 1162448557 -959247990 -133913213 
> .Random.seed[3] + 2^{32}
[1] 3311292359
> runif(1)
[1] 0.1663742
> #################################### 
> library(rstream)
> rngList <- c(new("rstream.mrg32k3a", seed = c(1806547166, 
+                  3311292359, 643431772, 1162448557, 3335719306, 
+                  4161054083), force.seed = TRUE), 
+              replicate(3, new("rstream.mrg32k3a")))
> sapply(rngList, rstream.sample)
[1] 0.1663742 0.3411064 0.3123993 0.1494334
> #################################### 
> library(parallel)
> cl <- makeCluster(4)
> clusterSetRNGStream(cl, 123)
> parSapply(cl, rep(1, 4), runif)
[1] 0.1663742 0.3411064 0.3123993 0.1494334
> stopCluster(cl)
> #################################### 
> library(parallel)
> RNGkind("L'Ecuyer-CMRG")
> set.seed(123)
> tryCatch(
+     {
+ 	unlist(mclapply(rep(1, 3), runif), mc.cores = 3)
+ 	# the above line will generate an error on Windows machines
+     },
+     error = function(e) {
+     	print(e)
+     }
+ )
<simpleError in unlist(mclapply(rep(1, 3), runif), mc.cores = 3): unused argument (mc.cores = 3)>
> runif(1)
[1] 0.1663742
> #################################### 
> library(rstream)
> library(parallel)
> rngList <- c(new("rstream.mrg32k3a", 
+                  seed = c(1806547166, 3311292359, 643431772,
+                           1162448557, 3335719306, 4161054083), 
+                  force.seed = TRUE), 
+              replicate(3, new("rstream.mrg32k3a")))
> unlist(mclapply(rngList, rstream.sample, mc.cores = 4))
[1] 0.1663742 0.3411064 0.3123993 0.1494334
> #################################### 
> 
> proc.time()
   user  system elapsed 
  0.365   0.054   1.363 
